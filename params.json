{"name":"HDPStructure","tagline":"Software for Bayesian nonparametric population structure analysis based on hierarchical Dirichlet processes.","body":"# HDPStructure\r\n    HDPStructure(X, dist, ...), simulates the HDPStructure\r\n       posterior conditioned on X, and returns population assignments of\r\n       the individuals in the population at each locus of interest.\r\n\r\n       Inputs:\r\n          X NxT. Allele matrix for the population. Here, X(i,j) denotes\r\n                  the allelic value of individual i at locus j.\r\n\r\n          dist Tx1. Vector indicating the distance between alleles, in\r\n                  centimorgans/Mb. The value of dist(t), for t>1\r\n                  indicates the distance between allele t-1 and allele t.\r\n                  The value of dist(1) is unused.\r\n\r\n          'PARAMETER', VALUE, ... Additional optional arguments must be\r\n                  provided as additional arguments to the call to the\r\n                  HDPStructure function in 'PARAMETER', VALUE, ... pairs.\r\n                  In each pair, 'PARAMETER' specifies which parameter to\r\n                  set, and VALUE specifies the value of that parameter.\r\n                  The parameters recognised by HDPStructure are listed as\r\n                  follows:\r\n\r\n          initpop NxT. The initialization for the population assignment.\r\n                  If you wish to start the MCMC chain at a population\r\n                  assignment which is already close to a mode, then that\r\n                  population assignment can be provided by the 'initpop'\r\n                  parameter. If 'initpop' is not provided, then the\r\n                  initialization is found using a linkage based method.\r\n\r\n          alp0 scalar. We place a gamma prior on the concentration of the\r\n                  top level Dirichlet process in the hierarchy. The\r\n                  hyperparameters for that gamma prior are given by\r\n                  'alp0' and 'bet0'. The default value of 'alp0' is 10.0.\r\n\r\n          bet0 scalar. The default value of 'bet0' is 1.0.\r\n\r\n          alp scalar. We also place a gamma prior on the concentrations\r\n                  of each of the bottom level Dirichlet processes in the\r\n                  hierarchy. The hyperparameters for this gamma prior are\r\n                  given by 'alp' and 'bet'. The default value of 'alp' is\r\n                  10.0.\r\n\r\n          bet scalar. The default value of 'bet' is 5.0.\r\n\r\n          a0init Tx1. The base measure of the top level Dirichlet process\r\n                  of the hierarchy is parameterised by the locations of\r\n                  interest. At each location, the base measure specifies\r\n                  allele emission probabilities. We place beta priors on\r\n                  these emission probabilities. In particular, at each\r\n                  location l, the prior on the emission probabilities is\r\n                  given by a bet a random variable with parameters a0(l)\r\n                  and b0(l). We place a prior on each pair of variables\r\n                  a0(l) and b0(l) as follows. First, we introduce\r\n                  variables c and m, and we place a symmetric beta prior\r\n                  on m with parameters 0.01, 0.01, and then we set\r\n                  a0(l) = c * m, b0(l) = c * (1-m). We fix c = .01. By\r\n                  default, the initial values of a0 and b0 are chosen by\r\n                  matching the empirical allele distributions of the\r\n                  data. In order to override this initialization,\r\n                  'a0init' and 'b0init' may be provided. Note that these\r\n                  are resampled using MH updates during each MCMC step\r\n                  according to the priors specified above.\r\n\r\n          b0init Tx1. The parameter 'b0init' is described above. By\r\n                  default, 'b0init' is chosen to match the empirical\r\n                  allele distribution of the data.\r\n\r\n          lowL scalar. We place a log uniform prior on the latent\r\n                  recombination rate. The range of this log uniform prior\r\n                  is given by ['lowL', 'upL']. The default value of\r\n                  'lowL' is 0.0.\r\n\r\n          upL scalar. The default value of 'upL' is 50.0.\r\n\r\n          iters scalar. The number of MCMC iterations to perform is given\r\n                  by 'iters'. In each iteration, MCMC updates are\r\n                  performed in turn for all of the latent variables of\r\n                  the model. In particular, the latent variables are\r\n                  updated in the following order, using the following\r\n                  methods:\r\n\r\n                      top level DP --- Gibbs\r\n                      bottom level DPs --- MH\r\n                      theta --- Gibbs\r\n                      alpha0 --- MH\r\n                      alpha --- Gibbs\r\n                      recombination rate --- MH\r\n                      a0 and b0 --- MH\r\n\r\n                  The default value for 'iters' is 10000.\r\n\r\n          burnin scalar. The number of MCMC iterations to discard at the\r\n                  beginning of the chain before collecting the state of\r\n                  the MCMC chain is given by 'burnin'. The default value\r\n                  for 'burnin' is 5000.\r\n\r\n          skip scalar. The number of MCMC iterations to thin after the\r\n                  burnin is completed is given by 'skip'. In particular,\r\n                  only every 'skip'-th iteration will be collected after\r\n                  burnin. The default value for 'skip' is 5. The value of\r\n                  skip must divide iters-burnin.\r\n\r\n          seed scalar. For reproducibility, a seed for the random number\r\n                  generator driving the MCMC may be provided. If the seed\r\n                  is not provided, or if the seed provided is <=0, then\r\n                  the state of matlab's random number generator is not\r\n                  modified prior to the commencement of the MCMC.\r\n\r\n       Outputs:\r\n          POPULATION NxTxD. This array contains the population assignment\r\n                  of the individuals in the population for each state in\r\n                  the MCMC chain that is collected. The number of\r\n                  collected states is given by D = (iters-burnin)/skip.\r\n                  Therefore, the population for individual i at location\r\n                  j specified by the state of the m-th iteration of MCMC\r\n                  is given by POPULATION(i, j, m).\r\n\r\n          RESULTS struct. Additional collected MCMC variables are given\r\n                  in the structure RESULTS. These variables are as\r\n                  follows:\r\n\r\n                      RESULTS.INDSAMP\r\n                      RESULTS.KSAMP\r\n                      RESULTS.ALPHA0SAMP\r\n                      RESULTS.ALPHASAMP\r\n                      RESULTS.RECOMSAMP\r\n                      RESULTS.MEANBASE\r\n                      RESULTS.THETASAMP\r\n                      RESULTS.POPNOMI\r\n\r\n        Examples:\r\n\r\n          > % Run HDPStructure on X, a binary array of alleles.\r\n          > POPULATION=HDPStructure(X,dist);\r\n          ...\r\n          > % Display the population assignments of the last state in the\r\n          > %     MCMC chain.\r\n          > disp(POPULATION(:,:,end));\r\n\r\n    Copyright (c) 2015, Maria De Iorio, Lloyd T. Elliott, Stefano Favaro\r\n        and Yee Whye Teh.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}